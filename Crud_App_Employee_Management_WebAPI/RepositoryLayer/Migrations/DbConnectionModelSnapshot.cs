// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RepositoryLayer.DataAccess;

#nullable disable

namespace RepositoryLayer.Migrations
{
    [DbContext(typeof(DbConnection))]
    partial class DbConnectionModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Models.EmployeeClass", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("EmployeeAge")
                        .HasColumnType("int");

                    b.Property<string>("EmployeeCity")
                        .HasColumnType("longtext");

                    b.Property<string>("EmployeeCountry")
                        .HasColumnType("longtext");

                    b.Property<string>("EmployeeDesignation")
                        .HasColumnType("longtext");

                    b.Property<string>("EmployeeFirstName")
                        .HasColumnType("longtext");

                    b.Property<int>("EmployeeGrade")
                        .HasColumnType("int");

                    b.Property<string>("EmployeeLastName")
                        .HasColumnType("longtext");

                    b.Property<string>("EmployeePassword")
                        .HasColumnType("longtext");

                    b.Property<string>("EmployeePhone")
                        .HasColumnType("longtext");

                    b.Property<string>("EmployeeState")
                        .HasColumnType("longtext");

                    b.Property<string>("EmployeeUserName")
                        .HasColumnType("longtext");

                    b.Property<string>("EmployeeZipCode")
                        .HasColumnType("longtext");

                    b.HasKey("EmployeeId");

                    b.HasIndex("EmployeeGrade");

                    b.ToTable("EmployeeClass");
                });

            modelBuilder.Entity("Models.Grade", b =>
                {
                    b.Property<int>("GradeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<sbyte>("Created_By")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("Created_Date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("GradeDescription")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("GradeName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<sbyte>("ModifiedBy")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("Modified_Date")
                        .HasColumnType("datetime(6)");

                    b.HasKey("GradeId");

                    b.ToTable("Grades");
                });

            modelBuilder.Entity("Models.Users", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("roles")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("users");
                });

            modelBuilder.Entity("Models.EmployeeClass", b =>
                {
                    b.HasOne("Models.Grade", "Grade")
                        .WithMany("Employees")
                        .HasForeignKey("EmployeeGrade")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Grade");
                });

            modelBuilder.Entity("Models.Grade", b =>
                {
                    b.Navigation("Employees");
                });
#pragma warning restore 612, 618
        }
    }
}
